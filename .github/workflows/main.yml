name: Main

on: push

jobs:
  #codestyle:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Set up Rust
  #      uses: hecrj/setup-rust-action@v1
  #      with:
  #        components: rustfmt
  #    - uses: actions/checkout@v2
  #    - run: cargo fmt --all -- --check

  #lint:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Set up Rust
  #      uses: hecrj/setup-rust-action@v1
  #      with:
  #        components: clippy
  #    - uses: actions/checkout@v2
  #    - run: cargo clippy --all-targets -- -D clippy::all

  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - run: cargo check --all

  #test:
  #  needs: [codestyle, lint, compile]
  #  runs-on: ubuntu-latest
  #  steps:
  #  - name: Setup Rust
  #    uses: hecrj/setup-rust-action@v1
  #  - name: Checkout
  #    uses: actions/checkout@v2
  #  - name: Test #if: env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY && env.STORAGE_ENDPOINT && env.STORAGE_KEY && env.STORAGE_REGION && env.STORAGE_SECRET
  #    env:
  #      AWS_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #      AWS_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #      AWS_DEFAULT_REGION: eu-north-1
  #      STORAGE_STORAGE_ENDPOINT: ${{ secrets.STORAGE_ENDPOINT }}
  #      STORAGE_STORAGE_KEY: ${{ secrets.STORAGE_KEY }}
  #      STORAGE_STORAGE_REGION: ${{ secrets.STORAGE_REGION }}
  #      STORAGE_STORAGE_SECRET: ${{ secrets.STORAGE_SECRET }}
  #      RUST_BACKTRACE: 1
  #      RUST_LOG: debug
  #    run: |
  #      echo "AWS_AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
  #      cargo test
  
  # deploy on pushes to master branch
  # assumes aws credentials (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY)
  # are configured in travis settings
  # see https://serverless.com/framework/docs/providers/aws/guide/credentials/
  # for more information



  #deploy-ecr:
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@v2
  #  - uses: Terranovax/aws-ecr-deploy@v1
  #    with:
  #      access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #      secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #      account_id: ${{ secrets.AWS_ACCOUNT_ID }}
  #      region: eu-north-1
  #      dockerfile: Dockerfile.web
  #      repo: qrst

  deploy-gcr:
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: get_tag_name
        run: echo ::set-output name=GIT_TAG_NAME::${GITHUB_REF/refs\/tags\//}
      - uses: RafikFarhad/push-to-gcr-github-action@v3
        with:
          gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          registry: gcr.io
          project_id: qrst-287813
          image_name: server-end
          image_tag: ${{ steps.get_tag_name.outputs.GIT_TAG_NAME}}
          dockerfile: ./Dockerfile


  # deploy-lambda:
  #   if: github.ref == 'refs/heads/master'
  #   runs-on: ubuntu-latest
  #   #needs: [test]
  #   steps:
  #     - name: Set up Rust
  #       uses: hecrj/setup-rust-action@v1
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Deploy #if: env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY && env.STORAGE_ENDPOINT && env.STORAGE_KEY && env.STORAGE_REGION && env.STORAGE_SECRET
  #       env:
  #         AWS_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: eu-north-1
  #         STORAGE_STORAGE_ENDPOINT: ${{ secrets.STORAGE_ENDPOINT }}
  #         STORAGE_STORAGE_KEY: ${{ secrets.STORAGE_KEY }}
  #         STORAGE_STORAGE_REGION: ${{ secrets.STORAGE_REGION }}
  #         STORAGE_STORAGE_SECRET: ${{ secrets.STORAGE_SECRET }}
  #         RUST_BACKTRACE: 1
  #         RUST_LOG: debug
  #         STAGE: dev
  #       run: |
  #         npm install
  #         npx serverless deploy --conceal
  #     - name: Deploy Producrtion #if: env.AWS_ACCESS_KEY_ID && env.AWS_SECRET_ACCESS_KEY && env.STORAGE_ENDPOINT && env.STORAGE_KEY && env.STORAGE_REGION && env.STORAGE_SECRET
  #       env:
  #         AWS_AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_DEFAULT_REGION: eu-north-1
  #         STORAGE_STORAGE_ENDPOINT: ${{ secrets.STORAGE_ENDPOINT }}
  #         STORAGE_STORAGE_KEY: ${{ secrets.STORAGE_KEY }}
  #         STORAGE_STORAGE_REGION: ${{ secrets.STORAGE_REGION }}
  #         STORAGE_STORAGE_SECRET: ${{ secrets.STORAGE_SECRET }}
  #         RUST_BACKTRACE: 1
  #         RUST_LOG: debug
  #         STAGE: prod
  #       run: |
  #         npm install
  #         npx serverless deploy --conceal